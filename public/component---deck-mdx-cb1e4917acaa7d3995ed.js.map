{"version":3,"sources":["webpack:////Users/rebeccadeprey/Websites/FELG-CSS-Grid/Wrapper.js","webpack:////Users/rebeccadeprey/Websites/FELG-CSS-Grid/deck.mdx","webpack:////Users/rebeccadeprey/Websites/FELG-CSS-Grid/theme.js","webpack:////Users/rebeccadeprey/Websites/FELG-CSS-Grid/images/browser-support.jpg"],"names":["SplitLayoutLeft","children","images","child","style","display","gridTemplateColumns","gridColumnGap","flexDirection","justifyContent","theme","fonts","body","monospace","colors","text","background","primary","styles","Slide","padding","li","marginBottom","img","height","width","layoutProps","MDXContent","components","props","mdxType","parentName","src","canIUseImg","alt","class","isMDXComponent","module","exports"],"mappings":"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","file":"component---deck-mdx-cb1e4917acaa7d3995ed.js","sourcesContent":["import React from 'react';\n\nexport const Wrapper = ({ children }) => (\n    <div>\n      {children}\n    </div>\n  );\n\nexport const SplitLayoutLeft = ({ children }) => {\n  const images = children.filter(child => {\n    return child.props && child.props.src;\n  });\n\n  children = children.filter(child => {\n    return !images.includes(child);\n  });\n\n  return (\n    <div style={{\n      display: 'grid',\n      gridTemplateColumns: '45% 45%',\n      gridColumnGap: '10%',\n    }}>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n      }}>\n        {children}\n      </div>\n      <div>\n        {images}\n      </div>\n    </div>\n  )\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport base from './theme'\nimport { Wrapper, SplitLayoutLeft } from './Wrapper'\nimport canIUseImg from './images/browser-support.jpg'\n\nexport const theme = base;\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  theme\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`CSS Grid`}</h1>\n    <p>{`March 17, 2020`}</p>\n    <hr></hr>\n    <h1>{`Why Use CSS Grid?`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`We already have Flexbox to layout, align, and distribute dynamic content in user interfaces`}</li>\n      <li parentName=\"ul\">{`Flexbox is much better than floats, tables and other old-school layout techniques`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`2D in Nature`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Lets us layout interfaces in terms of columns and rows`}</li>\n      <li parentName=\"ul\">{`Better at handling complex layouts`}</li>\n      <li parentName=\"ul\">{`First CSS module created specifically to address layout problems we've been struggling with for years!`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Browser Support`}</h1>\n    <SplitLayoutLeft mdxType=\"SplitLayoutLeft\">\n  CSS grid is now supported in Chrome, Edge, Safari, and Firefox\n      <p>{`  Internet Explorer 11 has partial support and uses an older version of the syntax`}</p>\n  <img src={canIUseImg} alt=\"Browser Support Chart from caniuse.com\" />\n    </SplitLayoutLeft>\n    <hr></hr>\n    <h1>{`Vocabulary`}</h1>\n    <h2>{`Grid Track`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The rows and columns of the grid`}</li>\n      <li parentName=\"ul\">{`The space between two grid lines`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Vocabulary`}</h1>\n    <h2>{`Grid Lines`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Dividing lines that make up the structure of the grid`}</li>\n      <li parentName=\"ul\">{`Are vertical and horizontal`}</li>\n      <li parentName=\"ul\">{`Are numbered by default but can also be named`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Grid Lines`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`You define grid tracks; grid lines are automatically defined by the grid`}</li>\n      <li parentName=\"ul\">{`Allow us to position items in the grid`}</li>\n      <li parentName=\"ul\">{`Numbered direction is based on the writing mode of the page`}</li>\n      <li parentName=\"ul\">{`Can name lines to make positioning easier`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Vocabulary`}</h1>\n    <h2>{`Grid Cell`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`A single \"unit\" of the grid`}</li>\n      <li parentName=\"ul\">{`Similar to table cells`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Vocabulary`}</h1>\n    <h2>{`Grid Area`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The total space surrounded by four grid lines`}</li>\n      <li parentName=\"ul\">{`Can be made up of any number of grid cells`}</li>\n      <li parentName=\"ul\">{`Doesn't have to represent all cells in a grid, but can`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Firefox Grid Inspector`}</h1>\n    <p>{`Talk a little about the tools offered and how we'll use them in examples`}</p>\n    <hr></hr>\n    <h1>{`Creating a Grid`}</h1>\n    <p>{`Every grid starts with a parent container with the property `}<inlineCode parentName=\"p\">{`display: grid`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.grid {\n    display: grid;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"grid\">\n    I'm a grid!\n</div>\n`}</code></pre>\n    <div style=\"display: grid;border: 1px dotted red;\">I'm a grid!</div>\n    <hr></hr>\n    <p>{`Easy, right? A one column grid isn't very interesting though, so let's add grid tracks!`}</p>\n    <hr></hr>\n    <h1>{`Specifying Grid Tracks`}</h1>\n    <p>{`Remember, grid tracks are what hold your grid items.`}</p>\n    <p>{`We create these by setting `}<inlineCode parentName=\"p\">{`grid-template-rows`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`grid-template-columns`}</inlineCode>{` on the parent container.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.grid {\n    display: grid;\n    grid-template-rows: 50px 2fr;\n    grid-template-columns: 25% 1fr 100px;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"grid\">\n    <div class=\"grid-item\">Item 1</div>\n    <div class=\"grid-item\">Item 2</div>\n    <div class=\"grid-item\">Item 3</div>\n    <div class=\"grid-item\">Item 4</div>\n</div>\n`}</code></pre>\n    <div style=\"display: grid;grid-template-rows:50px 2fr;grid-template-columns:25% 1fr 100px;border: 1px dotted red;\">\n    <div class=\"grid-item\" style=\"border: 1px dotted red;\">Item 1</div>\n    <div class=\"grid-item\" style=\"border: 1px dotted red;\">Item 2</div>\n    <div class=\"grid-item\" style=\"border: 1px dotted red;\">Item 3</div>\n    <div class=\"grid-item\" style=\"border: 1px dotted red;\">Item 4</div>\n    </div>\n    <hr></hr>\n    <h1>{`Creating Grid Items`}</h1>\n    <hr></hr>\n    <h1>{`Implicit vs. Explicit Grid`}</h1>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Explicit`}</em>{` grid is based on the `}<inlineCode parentName=\"li\">{`grid-template-columns`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`grid-template-rows`}</inlineCode>{` you define`}</li>\n      <li parentName=\"ul\">{`If there's more content than there are defined rows and columns, then the grid creates rows and columns in the `}<em parentName=\"li\">{`implicit`}</em>{` grid`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Implicit Grid`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`The grid tracks in rows and columns in the `}<em parentName=\"li\">{`implicit`}</em>{` grid are auto-sized by default based on their content`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`grid-auto-rows`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`grid-auto-columns`}</inlineCode>{` properties define size of implicit grid tracks`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Track Size and `}<inlineCode parentName=\"h1\">{`minmax()`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`minmax()`}</inlineCode>{` specifies minimum grid track size for automatically created rows and columns`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Still ensures that they expand to fit any content that's added`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Can use this when setting `}<inlineCode parentName=\"li\">{`grid-auto-rows`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`grid-auto-columns`}</inlineCode>{` properties`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Positioning Items Against Lines`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`You target a `}<strong parentName=\"li\">{`line`}</strong>{` when placing items, not a `}<strong parentName=\"li\">{`track`}</strong></li>\n      <li parentName=\"ul\">{`Items are placed using the following properties:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grid-column-start`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grid-column-end`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grid-row-start`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grid-row-end`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Don't need to specify `}<inlineCode parentName=\"li\">{`grid-row-end`}</inlineCode>{` if you want a grid item to span a whole row`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Grid Item Placement Algorithm`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Determines the order used for placing grid items in the grid`}</li>\n      <li parentName=\"ul\">{`Placement flow behavior is set with the `}<inlineCode parentName=\"li\">{`grid-auto-flow`}</inlineCode>{` property`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Any grid item positioned to start or end on a line that goes in the same direction as the grid will be given priority placement. Everything else will flow around it.`}</strong></li>\n    </ul>\n    <hr></hr>\n    <h1>{`Placement priorities:`}</h1>\n    <ol>\n      <li parentName=\"ol\">{`Same-direction positioning (i.e., `}<inlineCode parentName=\"li\">{`grid-auto-flow: row | column`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Order property (i.e., `}<inlineCode parentName=\"li\">{`order: 2`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Document order`}</li>\n    </ol>\n    <hr></hr>\n    <h1><inlineCode parentName=\"h1\">{`grid-auto-flow: row`}</inlineCode>{` (default placement)`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Items fill all of the slots in the current `}<em parentName=\"li\">{`row`}</em>{` before starting to fill the next row`}</li>\n      <li parentName=\"ul\">{`Algorithm prioritizes any item whose `}<strong parentName=\"li\">{`row start`}</strong>{` or `}<strong parentName=\"li\">{`row end`}</strong>{` property is defined`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Positions these items first. All of the other items are then flowed in around it using the normal flow`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Column positioning doesn't get priority with this flow setting`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If an item has a column position, the browser will skip to the specified column. This can leave empty cells in the grid.`}</li>\n        </ul></li>\n    </ul>\n    <hr></hr>\n    <h1><inlineCode parentName=\"h1\">{`grid-auto-flow: column`}</inlineCode></h1>\n    <ul>\n      <li parentName=\"ul\">{`Items fill up the current `}<em parentName=\"li\">{`column`}</em>{` from top to bottom before starting to fill the next column`}</li>\n      <li parentName=\"ul\">{`Algorithm prioritizes any item whose `}<strong parentName=\"li\">{`column start`}</strong>{` or `}<strong parentName=\"li\">{`column end`}</strong>{` property is defined`}</li>\n      <li parentName=\"ul\">{`Row positioning doesn't get priority with this flow setting`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`The `}<inlineCode parentName=\"h1\">{`span`}</inlineCode>{` keyword`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` keyword will make grid items span multiple rows or columns, but doesn't increase their placement priority`}</p>\n    <hr></hr>\n    <h1>{`Order`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Can use `}<inlineCode parentName=\"li\">{`order`}</inlineCode>{` property to change the order of grid items, overriding the default document order placement`}</li>\n      <li parentName=\"ul\">{`Works just like Flexbox order, with items set to `}<inlineCode parentName=\"li\">{`order: 0`}</inlineCode>{` by default`}</li>\n      <li parentName=\"ul\">{`Giving a grid item `}<inlineCode parentName=\"li\">{`order: 1`}</inlineCode>{` makes it show up at the end`}</li>\n      <li parentName=\"ul\">{`Can move grid items to beginning with negative order (`}<inlineCode parentName=\"li\">{`order: -1`}</inlineCode>{`), also like Flexbox`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Order happens:`}</h1>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`AFTER`}</em>{` row start/end positioning (in `}<inlineCode parentName=\"li\">{`grid-auto-flow: row`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><em parentName=\"li\">{`AFTER`}</em>{` column start/end positioning (in `}<inlineCode parentName=\"li\">{`grid-auto-flow: column`}</inlineCode>{`)`}</li>\n    </ul>\n    <hr></hr>\n    <h1>{`Additional Reading`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Rachel Andrew's `}<a parentName=\"li\" {...{\n          \"href\": \"https://abookapart.com/products/get-ready-for-css-grid-layout\"\n        }}><em parentName=\"a\">{`Get Ready for CSS Grid Layout`}</em></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://gedd.ski/post/grid-item-placement/\"\n        }}><em parentName=\"a\">{`How Items Flow Into a CSS Grid`}</em></a></li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","export default {\n  fonts: {\n    body: 'Roboto, sans-serif',\n    monospace: '\"Roboto Mono\", monospace',\n  },\n  colors: {\n    text: 'white',\n    background: 'black',\n    primary: 'blue',\n  },\n  styles: {\n    Slide: {\n      padding: '0 5rem'\n    },\n    li: {\n      marginBottom: '1.7rem'\n    },\n    img: {\n      height: 'auto',\n      width: 'auto'\n    }\n  },\n};\n","module.exports = __webpack_public_path__ + \"static/browser-support-0bf400d3454512b7cb779258056bd443.jpg\";"],"sourceRoot":""}